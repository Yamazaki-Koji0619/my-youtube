{"version":3,"sources":["component/UIparts/KeywordSearch.tsx","component/HeaderItem/HeaderMenu.tsx","component/Header.tsx","store/actionTypes.ts","styles/index.ts","styles/MainPage.ts","component/MainPageItem/ChannelInfo.tsx","store/channel/actions.ts","component/MainPageItem/WatchItem.tsx","component/MainPageItem/VideoInfo.tsx","component/MainPage.tsx","styles/ChannelPage.ts","component/ChannelPageItem/ClickChannelInfo.tsx","component/ChannelPageItem/ClickVideoInfo.tsx","component/ChannelPageItem/SideMenu.tsx","component/ChannelPage.tsx","Router.tsx","App.tsx","store/counter/reducer.ts","store/channel/reducer.ts","store/index.ts","index.tsx"],"names":["TextInput","props","TextField","fullWidth","item","label","margin","multiline","required","rows","value","type","onChange","HeaderMenu","useState","keyword","setKeyword","keywordSearchProps","useCallback","event","currentTarget","KeywordSearch","IconButton","useStyles","makeStyles","root","flexGrow","menuBar","backgroundColor","color","marginBottom","toolBar","maxWidth","width","height","iconButtons","Header","classes","open","setOpen","handleDrawerToggle","key","className","AppBar","position","ActionTypes","MainText","styled","h3","SubText","p","MainStyle","div","MainBottom","ChannelInfoStyle","Link","ChannelInfoItemStyle","ChannelInfoImage","img","MainTopBottom","VideoInfoStyle","VideoInfoItemStyle","VideoInfoImage","BackBlack","VideoFrame","iframe","ChannelInfo","dispatch","useDispatch","ChannelInfoProps","channel","ChannelInfoClick","channelActionItem","id","console","log","payload","channelData","passChannelItem","title","snippet","image","thumbnails","high","url","startTime","publishedAt","count","statistics","viewCount","registration","subscriberCount","description","map","index","to","onClick","src","medium","alt","videoCount","slice","WatchItem","videoId","youtube_url","VideoImageClick","VideoInfo","video","VideoInfoProps","anchor","setAnchor","setVideoId","MainPage","firstChannelItem","setFirstChannelItem","secondChannelItem","setSecondChannelItem","thirdChannelItem","setThirdChannelItem","firstVideoItem","setFirstVideoItem","secondVideoItem","setSecondVideoItem","thirdVideoItem","setThirdVideoItem","genre","name","useEffect","result","list","i","randomIndex","Math","floor","random","length","splice","youtube_data","youtube_video","VideoInfoMap","fetch","then","res","json","undefined","items","channelTitle","a","item01","item02","item03","ChannelVideoData","useSelector","state","counter","DisplayFlex","MainTitle","LeftWidth","RightWidth","DisplayFlexCenter","ChannelImage","Description","ScrollDiv","VideoImage","VideoTextWidth","VideoDescription","VideoFlex","MenuWidth","MenuUl","ul","MenuTitle","h4","MenuList","li","theme","ButtonStyle","fontSize","padding","ClickChannelInfo","channelInfo","channelItem","React","anchorEl","setAnchorEl","handleClose","Button","aria-controls","aria-haspopup","keepMounted","Boolean","onClose","ClickVideoInfo","videoInfo","videoItem","publishTime","SideMenu","setChannelVideoList","date","Date","nowYear","getFullYear","nowMonth","getMonth","nowDay","getDay","menuCategory","func","ChannelPage","channelName","channelVideoList","channel_url","box","push","Router","exact","path","component","App","initialState","history","History","rootReducer","combineReducers","router","connectRouter","action","rootRouter","applyMiddleware","routerMiddleware","thunk","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.25242e77.chunk.js","sourcesContent":["import React, { FC } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport { keywordProps } from '../types/HeaderType';\n\nconst TextInput: FC<keywordProps> = (props) => {\n    return (\n        <TextField\n            fullWidth={props.item.fullWidth}\n            label={props.item.label}\n            margin=\"dense\"\n            multiline={props.item.multiline}\n            required={props.item.required}\n            rows={props.item.rows}\n            value={props.item.value}\n            type={props.item.type}\n            onChange={props.item.onChange}\n        />\n    )\n}\n\nexport default TextInput;\n","import React, { FC, useState, useCallback } from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '@material-ui/icons/Search';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport KeywordSearch from '../UIparts/KeywordSearch';\nimport { headerProps } from '../types/HeaderType';\n\nconst HeaderMenu: FC<headerProps> = (props) => {\n\n    const [keyword, setKeyword] = useState('');\n\n    const inputKeyword = useCallback((event: React.ChangeEvent<HTMLInputElement>): void => {\n        setKeyword(event.currentTarget.value)\n    },[setKeyword])\n\n    const keywordSearchProps = {\n        fullWidth: false,\n        label: \"キーワード入力\",\n        multiline: false,\n        required: false,\n        rows: 1,\n        value: keyword, \n        type: \"text\",\n        onChange: inputKeyword,\n    }\n\n    return(\n        <div>\n            <KeywordSearch item={keywordSearchProps} />\n            <IconButton>\n                <SearchIcon />\n            </IconButton>\n            <IconButton>\n                <MenuIcon />\n            </IconButton>\n        </div>\n    )\n};\n\nexport default HeaderMenu;","import React, { useState, useCallback } from 'react' ;\nimport { makeStyles } from '@material-ui/styles'\nimport AppBar from '@material-ui/core/AppBar';\nimport ToolBar from '@material-ui/core/Toolbar';\n// import { useDispatch, useSelector } from 'react-redux';\n// import { getSignedIn } from '../../redux/users/selector';\n// import { push } from 'connected-react-router';\nimport HeaderMenu from './HeaderItem/HeaderMenu';\n\nconst useStyles = makeStyles({\n    root: {\n        flexGrow: 1,\n    },\n    menuBar: {\n        backgroundColor: \"#fff\",\n        color: \"#444\",\n        marginBottom: \"150px\"\n    },\n    toolBar: {\n        margin: \"0 auto\",\n        maxWidth: 1024,\n        width: \"100%\",\n        height: \"80px\"\n    },\n    iconButtons: {\n        margin: \"0 0 0 auto\"\n    }\n})\n\nconst Header = () => {\n    const classes = useStyles();\n    // const dispatch = useDispatch();\n    // const selector = useSelector((state) => state)\n    const isSignedIn: boolean = true;\n\n    const [open, setOpen] = useState(false);\n\n    const handleDrawerToggle= useCallback((event): void => {\n        if(event.type === 'keydown' && (event.key === 'Tab' || event.key ==='Shift')){\n            return;\n        }\n        setOpen(!open)\n    },[setOpen, open]);\n\n    return(\n        <div className={classes.root}>\n            <AppBar position=\"fixed\" className={classes.menuBar}>\n                <ToolBar className={classes.toolBar}>\n                    <h2>My Youtube</h2>\n                    {isSignedIn && (\n                        <div className={classes.iconButtons}>\n                            <HeaderMenu handleDrawerToggle={handleDrawerToggle} />\n                        </div>\n                    )}\n                </ToolBar>\n            </AppBar>\n            {/* <ClosableDrawer open={open} onClose={handleDrawerToggle} /> */}\n        </div>\n    )\n};\n\nexport default Header;","// *\n// * action types\n// * 一意となるキーを指定するので、Actionが増えるたびにここにキーを書く\n// *\n\nexport const ActionTypes = {\n    sendChannel: \"SEND_CHANNEL\",\n    sendChannelData: \"SEND_CHANNEL_DATA\",\n    increment: \"INCREMENT\", // \"INCREMENT\"型\n    decrement: \"DECREMENT\", // \"DECREMENT\"型\n    countReset: \"COUNT_RESET\", // \"COUNT_RESET\"型\n} as const;","import styled from 'styled-components';\n\nexport const MainText = styled.h3`\n    margin: 0 0 5px;\n    font-size: 20px;\n`;\n\nexport const SubText = styled.p`\n    margin: 0;\n    padding-top: 5px;\n    margin-right: 20px;\n`","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\n// MainPage.tsx\nexport const MainStyle = styled.div`\n    max-width: 1024px;\n    margin: 0 auto;\n    padding-top: 20px;\n`;\n// MainPage.tsx\n\n\n// ChannelInfo.tsx\nexport const MainBottom = styled.div`\n    border-bottom: 1px solid black;\n`\n\nexport const ChannelInfoStyle = styled(Link)`\n    color: black;\n    text-decoration: none;\n    display: flex;\n    align-items: center;\n`;\n\nexport const ChannelInfoItemStyle = styled.div`\n    display: flex;\n`;\n\nexport const ChannelInfoImage = styled.img`\n    border-radius: 50%;\n    overflow: hidden;\n    width: 120px;\n    margin-right: 20px;\n`;\n// ChannelInfo.tsx\n\n\n//VideoInfo.tsx\nexport const MainTopBottom = styled.div`\n    padding: 20px 0 50px;\n`\n\nexport const VideoInfoStyle = styled.div`\n    display: flex;\n    justify-content: space-between;\n`;\n\nexport const VideoInfoItemStyle = styled.div`\n    width: 32%;\n`;\n\nexport const VideoInfoImage = styled.img`\n    width: 100%;\n`;\n//VideoInfo.tsx\n\n//WatchItem.tsx\nexport const BackBlack = styled.div`\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background-color: rgba(0,0,0,0.4);\n    z-index: 999999;\n`;\n\nexport const VideoFrame = styled.iframe`\n    width: 950px;\n    height: 534px;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n`\n//WatchItem.tsx\n","import React, { FC } from 'react';\nimport { ChannelInfoReduxSetType, ChannelInfoPropsType } from '../types/MainType';\nimport { useDispatch } from 'react-redux';\nimport { channelInfoAction, channelDataItem } from '../../store/channel/actions';\nimport { MainText, SubText } from '../../styles/index';\nimport { MainBottom, ChannelInfoStyle, ChannelInfoImage, ChannelInfoItemStyle } from '../../styles/MainPage';\nimport { ChannelDataType } from '../types/ChannelType';\n\nconst ChannelInfo: FC<ChannelInfoPropsType> = (props) => {\n\n    const dispatch = useDispatch();\n\n    const ChannelInfoProps = props.channel;\n\n    const ChannelInfoClick = (channelActionItem: ChannelInfoReduxSetType) => {\n        //チャンネルのIDを渡し、ChannelPageでAPI処理に使う\n        dispatch(channelInfoAction(channelActionItem.id))\n\n        const passChannelItem: ChannelDataType = {\n            title: channelActionItem.snippet.title,\n            image: channelActionItem.snippet.thumbnails.high.url,\n            startTime: channelActionItem.snippet.publishedAt,\n            count: channelActionItem.statistics.viewCount,\n            registration: channelActionItem.statistics.subscriberCount,\n            description: channelActionItem.snippet.description\n        };\n\n        //チャンネルの基本的な情報を渡し、ChannelPageでそのまま表示させる\n        dispatch(channelDataItem(passChannelItem))\n    }\n\n    console.log(props);\n\n    return(\n        <MainBottom>\n            {ChannelInfoProps.map((item, index) => (\n                <ChannelInfoStyle to=\"/channel\" key={index} onClick={() => ChannelInfoClick(item)}>\n                    <div>\n                        <ChannelInfoImage src={item.snippet.thumbnails.medium.url} alt=\"\"/>\n                    </div>\n                    <div>\n                        <MainText>{item.snippet.title}</MainText>\n                        <ChannelInfoItemStyle>\n                            <SubText>チャンネル登録者数：{item.statistics.subscriberCount}人</SubText>\n                            <SubText>投稿動画数：{item.statistics.videoCount}</SubText>\n                            <SubText>チャンネル開始日：{item.snippet.publishedAt.slice(0,4)}/{item.snippet.publishedAt.slice(5,7)}/{item.snippet.publishedAt.slice(8,10)}</SubText>\n                        </ChannelInfoItemStyle>\n                    </div>\n                </ChannelInfoStyle>\n            ))}\n        </MainBottom>\n    )\n};\n\nexport default ChannelInfo;","import { ActionTypes } from \"../actionTypes\";\nimport { ChannelInfoTypes } from './types';\nimport { ChannelDataType } from '../../component/types/ChannelType';\n// import { CounterActionTypes } from \"./types\";\n\n// *\n// * action creators\n// *\n\nexport const channelInfoAction = (channel: string): ChannelInfoTypes => {\n    console.log(channel);\n    return {\n        type: ActionTypes.sendChannel,\n        payload: channel,\n    };\n};\n\nexport const channelDataItem = (channelData: ChannelDataType): ChannelInfoTypes => {\n    console.log(channelData);\n    return {\n        type: ActionTypes.sendChannelData,\n        payload: channelData\n    }\n}\n\n// export const incrementAction = (): CounterActionTypes => {\n//   return {\n//     type: ActionTypes.increment, // \"INCREMENT\"\n//   };\n// };\n\n// export const decrementAction = (): CounterActionTypes => {\n//   return {\n//     type: ActionTypes.decrement,\n//   };\n// };\n\n// export const resetAction = (): CounterActionTypes => {\n//   return {\n//     type: ActionTypes.countReset,\n//   };\n// };","import React, { FC } from 'react';\nimport { WatchItemProps } from '../types/MainType';\nimport { BackBlack, VideoFrame } from '../../styles/MainPage';\n\nconst WatchItem: FC<WatchItemProps> = (props) => {\n\n    console.log(props);\n\n    const videoId = props.videoId;\n    const youtube_url = `https://www.youtube.com/embed/${videoId}`;\n\n    return(\n        <BackBlack onClick={() => props.VideoImageClick(\"cancel\")}>\n            <VideoFrame src={youtube_url}></VideoFrame>\n        </BackBlack>\n    )\n};\n\nexport default WatchItem;","import React, { FC, useState } from 'react';\nimport { VideoInfoPropsType } from '../types/MainType';\nimport { MainTopBottom, VideoInfoStyle, VideoInfoItemStyle, VideoInfoImage } from '../../styles/MainPage';\nimport WatchItem from './WatchItem';\n\nconst VideoInfo: FC<VideoInfoPropsType> = (props) => {\n\n    console.log(props.video);\n\n    const VideoInfoProps = props.video;\n\n    const [anchor, setAnchor] = useState<boolean>(false);\n    const [videoId, setVideoId] = useState<string>('');\n\n    const VideoImageClick = (id: string): void => {\n        setVideoId(id);\n        setAnchor(!anchor);\n    };\n\n    return(\n        <MainTopBottom>\n            <VideoInfoStyle>\n                {VideoInfoProps.map((item, index) => (\n                    <VideoInfoItemStyle key={index} onClick={() => VideoImageClick(item.id.videoId)}>\n                        <VideoInfoImage src={item.snippet.thumbnails.high.url} />\n                        <div>{item.snippet.title}</div>\n                    </VideoInfoItemStyle>\n                ))}\n            </VideoInfoStyle>\n            {anchor ? <WatchItem anchor={anchor} VideoImageClick={VideoImageClick} videoId={videoId} /> : <div></div>}\n        </MainTopBottom>\n    )\n};\n\nexport default VideoInfo;","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { randomIdDataType, ChannelInfoType, VideoInfoType } from './types/MainType';\nimport ChannelInfo from './MainPageItem/ChannelInfo';\nimport VideoInfo from './MainPageItem/VideoInfo';\nimport { MainStyle } from '../styles/MainPage';\n\nimport { RootState } from '../store';\nimport { decrementAction, incrementAction, resetAction } from '../store/counter/actions';\n\nconst MainPage: React.FC = () => {\n\n  const [firstChannelItem, setFirstChannelItem] = useState<ChannelInfoType>([]);\n  const [secondChannelItem, setSecondChannelItem] = useState<ChannelInfoType>([]);\n  const [thirdChannelItem, setThirdChannelItem] = useState<ChannelInfoType>([]);\n\n  const [firstVideoItem, setFirstVideoItem] = useState<VideoInfoType>([]);\n  const [secondVideoItem, setSecondVideoItem] = useState<VideoInfoType>([]);\n  const [thirdVideoItem, setThirdVideoItem] = useState<VideoInfoType>([]);\n\n  const channelData: randomIdDataType = [\n      {id: 'UC1uZYgOfncA-Gnk0GsLVK5A', genre: 'music', name: 'Unison Square Garden'},\n      {id: 'UCpGpA7mSYmNJjLiJxKso5QA', genre: 'comedy', name: '霜降り明星'},\n      {id: 'UCDhjThxt99rkGcjcEreyOQg', genre: 'study', name: '李姉妹'},\n      {id: 'UC-bOAxx-YOsviSmqh8COR0w', genre: 'study', name: 'トラハック'},\n      {id: 'UCti6dG0zSAetLGGYcgNML4Q', genre: 'study', name: 'しまぶー'},\n      {id: 'UC3-1iYGHfR43q_b974vUNYg', genre: 'study', name: 'フェルミ研究所'},\n      {id: 'UCFkncXKwLRtA2MFdXOv34yQ', genre: 'game', name: 'Nephrite'},\n  ];\n\n  useEffect(() => {\n    //youtube_dataに入れるためのidをランダムに作成する\n    const result = [];\n    let list: string[] = [];//APIを叩くためのIdを保存する\n    for(let i = 0; i < 3; i++){\n        let randomIndex = Math.floor(Math.random() * channelData.length);\n        result[i] = channelData[randomIndex];\n        channelData.splice(randomIndex, 1);\n        list = result.map(item => item.id);\n    }\n    \n    const youtube_data = `https://www.googleapis.com/youtube/v3/channels?key=AIzaSyA5pSnsK73ZJycRlduNL_bxjNqhud95Vag&part=snippet,statistics&id=${list[0]}&id=${list[1]}&id=${list[2]}`;\n    const youtube_video = [\n        `https://www.googleapis.com/youtube/v3/search?key=AIzaSyA5pSnsK73ZJycRlduNL_bxjNqhud95Vag&part=id,snippet&channelId=${list[0]}&maxResults=3&order=date`,\n        `https://www.googleapis.com/youtube/v3/search?key=AIzaSyA5pSnsK73ZJycRlduNL_bxjNqhud95Vag&part=id,snippet&channelId=${list[1]}&maxResults=3&order=date`,\n        `https://www.googleapis.com/youtube/v3/search?key=AIzaSyA5pSnsK73ZJycRlduNL_bxjNqhud95Vag&part=id,snippet&channelId=${list[2]}&maxResults=3&order=date`\n    ];\n\n    const VideoInfoMap = (firstChannelItem: ChannelInfoType, secondChannelItem: ChannelInfoType, thirdChannelItem: ChannelInfoType ) => {\n        youtube_video.map(url => {\n            fetch(url).then(res => res.json()).then(result => {\n                if(firstChannelItem !== undefined && secondChannelItem !== undefined && thirdChannelItem !== undefined){\n                    if(result.items[0].snippet.channelTitle === firstChannelItem[0].snippet.title){\n                        setFirstVideoItem(result.items);\n                    }else if(result.items[0].snippet.channelTitle === secondChannelItem[0].snippet.title){\n                        setSecondVideoItem(result.items);\n                    }else if(result.items[0].snippet.channelTitle === thirdChannelItem[0].snippet.title){\n                        setThirdVideoItem(result.items);\n                    }\n                }\n            })\n        })\n    }\n\n    const ChannelVideoData = async() => {\n        //youtubeAPIから情報を取得する\n        await fetch(youtube_data).then(res => res.json()).then(result => {\n            const item01 = [result.items[0]];\n            const item02 = [result.items[1]];\n            const item03 = [result.items[2]];\n            setFirstChannelItem(item01);\n            setSecondChannelItem(item02);\n            setThirdChannelItem(item03);\n            VideoInfoMap(item01, item02, item03);\n        });\n\n    }\n\n    ChannelVideoData();\n  },[]);\n\n//   console.log(firstChannelItem);\n//   console.log(secondChannelItem);\n//   console.log(thirdChannelItem);\n//   console.log(firstVideoItem);\n//   console.log(secondVideoItem);\n//   console.log(thirdVideoItem);\n\n  const currentCount = useSelector((state: RootState) => state.counter);\n  const dispatch = useDispatch();\n\n  const handleIncrement = () => dispatch(incrementAction());\n  const handleDecrement = () => dispatch(decrementAction());\n  const handleReset = () => dispatch(resetAction());\n  return (\n    <MainStyle>\n      {/* <div>{currentCount.value}</div>\n      <button onClick={handleIncrement}>Up</button>\n      <button onClick={handleDecrement}>Down</button>\n      <button onClick={handleReset}>Reset</button> */}\n      <ChannelInfo channel={firstChannelItem} />\n      <VideoInfo video={firstVideoItem} />\n      <ChannelInfo channel={secondChannelItem} />\n      <VideoInfo video={secondVideoItem} />\n      <ChannelInfo channel={thirdChannelItem} />\n      <VideoInfo video={thirdVideoItem} />\n    </MainStyle>\n  );\n};\n\nexport default MainPage;\n","import styled from 'styled-components';\n\n//共通\nexport const DisplayFlex = styled.div`\n    display: flex;\n    max-width: 1024px;\n    margin: 0 auto;\n`\n;\nexport const MainTitle = styled.h3`\n    margin: 5px 0;\n    padding-left: 20px;\n`;\n\nexport const SubText = styled.p`\n    margin: 5px 0;\n    padding-left: 20px;\n`;\n//共通\n\n//ChannelPage.tsx\nexport const LeftWidth = styled.div`\n    width: 90%;\n    max-width: 922px;\n    padding-top: 20px;\n`;\n\nexport const RightWidth = styled.div`\n    width: 20%;\n    border-left: 1px solid rgba(0,0,0,0.2);\n    position: fixed;\n    top: 80px;\n    right: 0;\n    height: 100vh;\n`;\n//ChannelPage.tsx\n\n//ClickChannelInfo.tsx\nexport const DisplayFlexCenter = styled.div`\n    display: flex;\n    align-items: center;\n    border-bottom: 1px solid black;\n    padding-bottom: 10px;\n`;\n    \nexport const ChannelImage = styled.img`\n    width: 120px;\n    border-radius: 50%;\n`;\n    \n\nexport const Description = styled.div`\n    width: 600px;\n    height: auto;\n    padding: 10px;\n    white-space: pre-wrap;\n`;\n//ClickChannelInfo.tsx\n\n//ClickVideoInfo.tsx\nexport const ScrollDiv = styled.div`\n    height: 68vh;\n    overflow: scroll;\n`;\n\nexport const VideoImage = styled.img`\n    width: 45%;\n`;\n\nexport const VideoTextWidth = styled.div`\n    width: 54%;\n`;\n\nexport const VideoDescription = styled.p`\n    margin: 5px 0;\n    padding-left: 20px;\n    overflow: hidden;\n    white-space: pre-wrap;\n`;\n\nexport const VideoFlex = styled(DisplayFlex)`\n    margin: 20px 0;\n`\n//ClickVideoInfo.tsx\n\n//SideMenu.tsx\nexport const MenuWidth = styled.div`\n    width: 90%;\n    margin: 0 auto;\n`;\n\nexport const MenuUl = styled.ul`\n    list-style: none;\n    padding: 0 0 0 20px;\n    margin: 0;\n`;\n\nexport const MenuTitle = styled.h4`\n    padding: 0;\n    margin-bottom: 0;\n`;\n\nexport const MenuList = styled.li`\n    margin: 5px 0;\n    padding: 10px 0;\n`;\n//SideMenu.tsx\n","import React, {FC, useState} from 'react';\nimport { ChannelDataPropsType } from '../types/ChannelType';\nimport { DisplayFlex, DisplayFlexCenter, ChannelImage, MainTitle, SubText, Description } from '../../styles/ChannelPage';\n\n//Material-ui\nimport Button from '@material-ui/core/Button';\nimport Menu from '@material-ui/core/Menu';\nimport { makeStyles } from '@material-ui/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    ButtonStyle: {\n        color: 'black',\n        fontSize: '16px',\n        padding: '5px 0 5px 20px'\n    }\n}));\n\nconst ClickChannelInfo: FC<ChannelDataPropsType> = (props) => {\n\n    //styleを付ける\n    const classes = useStyles();\n    //propsの情報をまとめる\n    const channelInfo = props.channelItem;\n    const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n    console.log(channelInfo);\n\n    const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n        setAnchorEl(event.currentTarget);\n    };\n    \n      const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    return(\n        <DisplayFlexCenter>\n            <div><ChannelImage src={channelInfo.image} alt=\"image\"/></div>\n            <div>\n                <MainTitle>{channelInfo.title}</MainTitle>\n                <DisplayFlex>\n                    <SubText>登録者数：{channelInfo.registration}</SubText>\n                    <SubText>投稿動画数：{channelInfo.count}</SubText>\n                    <SubText>チャンネル開始日：{channelInfo.startTime.slice(0,4)}/{channelInfo.startTime.slice(5,7)}/{channelInfo.startTime.slice(8,10)}</SubText>\n                </DisplayFlex>\n                <Button className={classes.ButtonStyle} aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}>\n                    詳細をみる\n                </Button>\n                <Menu\n                    id=\"simple-menu\"\n                    anchorEl={anchorEl}\n                    keepMounted\n                    open={Boolean(anchorEl)}\n                    onClose={handleClose}\n                >\n                    <Description onClick={handleClose}>{channelInfo.description}</Description>\n                </Menu>\n            </div>\n        </DisplayFlexCenter>\n    )\n};\n\nexport default ClickChannelInfo;","import React, { FC, useState } from 'react';\nimport { ChannelVideoPropsType } from '../types/ChannelType';\nimport { ScrollDiv, VideoFlex, VideoImage, VideoTextWidth, MainTitle, SubText, VideoDescription } from '../../styles/ChannelPage';\nimport WatchItem from '../MainPageItem/WatchItem';\n\nconst ClickVideoInfo: FC<ChannelVideoPropsType> = (props) => {\n\n    console.log(props);\n    const videoInfo = props.videoItem;\n\n    const [anchor, setAnchor] = useState<boolean>(false);\n    const [videoId, setVideoId] = useState<string>('');\n\n    const VideoImageClick = (id: string): void => {\n        setVideoId(id);\n        setAnchor(!anchor);\n    };\n\n    return(\n        <ScrollDiv>\n            {videoInfo.map((item, index) => (\n                <VideoFlex key={index}>\n                    <VideoImage src={item.snippet.thumbnails.high.url} alt=\"動画画像\" onClick={() => VideoImageClick(item.id.videoId)}/>\n                    <VideoTextWidth>\n                        <MainTitle>{item.snippet.title}</MainTitle>\n                        <SubText>動画投稿日：{item.snippet.publishTime.slice(0,4)}/{item.snippet.publishTime.slice(5,7)}/{item.snippet.publishTime.slice(8,10)}</SubText>\n                        <SubText>動画詳細▽</SubText>\n                        <VideoDescription>{item.snippet.description}</VideoDescription>\n                    </VideoTextWidth>\n                </VideoFlex>\n            ))}\n            {anchor ? <WatchItem anchor={anchor} VideoImageClick={VideoImageClick} videoId={videoId} /> : <div></div>}\n        </ScrollDiv>\n    )\n};\n\nexport default ClickVideoInfo;","import React, { FC } from 'react';\nimport { MenuWidth, MenuTitle, MenuUl, MenuList } from '../../styles/ChannelPage';\nimport { ChannelVideoPropsType } from '../types/ChannelType';\n\nconst SideMenu: FC<ChannelVideoPropsType> = (props) => {\n\n    const videoList = props.videoItem;\n    const setVideoList = props.setChannelVideoList;\n\n    const date = new Date();\n    const nowYear = date.getFullYear();\n    const nowMonth = date.getMonth();\n    const nowDay = date.getDay();\n\n    console.log(`${nowYear}-${nowMonth}-${nowDay}`);\n    \n    const newVideoClick = (): void => {\n        \n        console.log('new')\n    };\n\n    const oldVideoClick = (): void => {\n        console.log('old')\n    };\n\n    const longVideoClick = (): void => {\n        console.log('long')\n    };\n\n    const shortVideoClick = (): void => {\n        console.log('short')\n    };\n\n    const manyVideoClick = (): void => {\n        console.log('many')\n    };\n\n    const littleVideoClick = (): void => {\n        console.log('little')\n    };\n\n    const menuCategory = [\n        {name: '投稿が新しい順', func: newVideoClick},\n        {name: '投稿が古い順', func: oldVideoClick},\n        {name: '再生時間が長い順', func: longVideoClick},\n        {name: '再生時間が短い順', func: shortVideoClick},\n        {name: '再生回数が多い順', func: manyVideoClick},\n        {name: '再生回数が少ない順', func: littleVideoClick}\n    ];\n\n    return(\n        <MenuWidth>\n            <MenuTitle>動画を並べ替える▽</MenuTitle>\n            <MenuUl>\n                {menuCategory.map((item, index) => (\n                    <MenuList key={index} onClick={() => item.func()}>{item.name}</MenuList>\n                ))}\n            </MenuUl>\n        </MenuWidth>\n    )\n};\n\nexport default SideMenu;","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n//ストアから情報取得\nimport { RootState } from '../store';\n//type\nimport { ChannelNameType, ChannelDataType, ChannelVideoType, ChannelVideoSetType } from './types/ChannelType';\n//style\nimport { DisplayFlex, LeftWidth, RightWidth } from '../styles/ChannelPage';\nimport ClickChannelInfo from '../component/ChannelPageItem/ClickChannelInfo';\nimport ClickVideoInfo from '../component/ChannelPageItem/ClickVideoInfo';\nimport SideMenu from '../component/ChannelPageItem/SideMenu';\n\nconst ChannelPage: React.FC = () => {\n\n    const dispatch = useDispatch();\n    const channelName: ChannelNameType = useSelector((state: RootState) => state.channel.channel);\n    const channelData: ChannelDataType = useSelector((state: RootState) => state.channel.channelData);\n    //取ってきた情報を配列でまとめ、表示する\n    const [channelVideoList, setChannelVideoList] = useState<ChannelVideoType>([]);\n\n    const channel_url = `https://www.googleapis.com/youtube/v3/search?key=AIzaSyA5pSnsK73ZJycRlduNL_bxjNqhud95Vag&part=id,snippet&channelId=${channelName}&maxResults=5&order=date`;\n\n    console.log(channelName);\n    console.log(channelData);\n\n    useEffect(() => {\n        //取ってきた情報をいったん入れておく場所\n        const box: ChannelVideoType = [];\n\n        //データを取得し、channelVideoListに格納\n        fetch(channel_url).then(res => res.json()).then(result => {\n            result.items.map((item: ChannelVideoSetType) => {\n                box.push(item)\n            });\n            setChannelVideoList(box);\n        })\n    },[]);\n\n    console.log(channelVideoList);\n\n    return(\n        <DisplayFlex>\n            <LeftWidth>\n                <ClickChannelInfo channelItem={channelData} />\n                <ClickVideoInfo videoItem={channelVideoList} />\n            </LeftWidth>\n            <RightWidth>\n                <SideMenu videoItem={channelVideoList} setChannelVideoList={setChannelVideoList} />\n            </RightWidth>\n        </DisplayFlex>\n    )\n};\n\nexport default ChannelPage;","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport MainPage from './component/MainPage';\nimport ChannelPage from './component/ChannelPage';\n\nconst Router = () => {\n    return (\n        <Switch>\n            <Route exact path={\"/my-youtube\"} component={MainPage} />\n            <Route exact path={\"/my-youtube/channel\"} component={ChannelPage} />\n        </Switch>\n    );\n};\n\nexport default Router;","import * as React from 'react';\nimport Header from './component/Header';\nimport Router from './Router';\nimport  \"./styles/style.css\";\n\n/* react-reduxのProviderでラッピングしたコンポーネントをレンダリング */\nclass App extends React.Component {\n  public render() {\n    return (\n      <>\n        <Header />\n        <main className=\"main\">\n          <Router/>\n        </main>\n      </>\n    );\n  }\n}\n\n\nexport default App;\n","import { ActionTypes } from \"../actionTypes\";\nimport { Count, CounterActionTypes } from \"./types\";\n\n// *\n// * reducer\n// *\n\nconst initialState: Count = {\n  value: 0,\n};\n\nexport const countReducer = (state = initialState, action: CounterActionTypes): Count => {\n  switch (action.type) {\n    case ActionTypes.increment: // action.type === \"INCREMENT\"\n      return { value: state.value + 1 }; // value に1足す\n    case ActionTypes.decrement:\n      // 0以下にはならない\n      return { value: state.value === 0 ? 0 : state.value - 1 };\n    case ActionTypes.countReset:\n      return { value: 0 };\n    default:\n      const _: never = action;\n      return state;\n  }\n};","import { ActionTypes } from \"../actionTypes\";\n// import { Count, CounterActionTypes } from \"./types\";\nimport { Channel, ChannelInfoTypes } from \"./types\";\n\n// *\n// * reducer\n// *\n\n// const initialState: Count = {\n//   value: 0,\n// };\n\n// export const countReducer = (state = initialState, action: CounterActionTypes): Count => {\n//   switch (action.type) {\n//     case ActionTypes.increment: // action.type === \"INCREMENT\"\n//       return { value: state.value + 1 }; // value に1足す\n//     case ActionTypes.decrement:\n//       // 0以下にはならない\n//       return { value: state.value === 0 ? 0 : state.value - 1 };\n//     case ActionTypes.countReset:\n//       return { value: 0 };\n//     default:\n//       const _: never = action;\n//       return state;\n//   }\n// };\n\nconst initialState: Channel = {\n    channel: \"\",\n    channelData: {\n        title: \"\",\n        image: \"\",\n        startTime: \"\",\n        count: 0,\n        registration: 0,\n        description: \"\"\n    },\n};\n\nexport const channelReducer = (state = initialState, action: ChannelInfoTypes): Channel => {\n    switch (action.type) {\n        case ActionTypes.sendChannel:\n            return {\n                ...state,\n                channel: action.payload,\n            }\n        case ActionTypes.sendChannelData:\n            return {\n                ...state,\n                channelData: action.payload,\n            }\n        default:\n            return state;\n    }\n};","import { combineReducers, createStore, applyMiddleware } from 'redux';\nimport { connectRouter, routerMiddleware } from 'connected-react-router';\nimport { countReducer } from './counter/reducer';\nimport { channelReducer } from './channel/reducer';\nimport * as History from 'history'; \nimport thunk from 'redux-thunk';\n\n// *\n// * store 本体\n// *\n\nconst history = History.createBrowserHistory();\n\n// Reducerを増やすときは、ここに追加\nconst rootReducer = combineReducers({\n  router: connectRouter(history),\n  counter: countReducer,\n  channel: channelReducer,\n});\n\nconst rootRouter = applyMiddleware(\n  routerMiddleware(history),\n  thunk\n)\n\n// states type\nexport type RootState = ReturnType<typeof rootReducer>; // ReturnType<typeof fn>は、fnの返り値の型\n\n// store\nconst store = createStore(rootReducer, rootRouter);\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { ConnectedRouter } from 'connected-react-router';\nimport * as History from 'history'; \nimport App from './App';\nimport store from './store';\n\nconst history = History.createBrowserHistory();\n\nReactDOM.render(\n  <Provider store={store}>\n    <ConnectedRouter history={history}>\n      <App />\n    </ConnectedRouter>\n  </Provider>,\n  document.getElementById(\"root\"),\n);"],"sourceRoot":""}